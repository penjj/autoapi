/* eslint-disable */

/**
 * This file was auto generated by `ts-autoapi`.
 * Do not make direct changes to the file.
 * If you need to make changes with openapi doc file,
 * please use the ts-autoapi cli.
 */

export interface GetQuery {
  /**
   * A user ID. Only return users with an ID greater than this ID.
   */
  since?: number

  /**
   * Results per page (max 100)
   */
  perpage?: number

}

export interface GetByUsernameEventsQuery {
  /**
   * Results per page (max 100)
   */
  perpage?: number

  /**
   * Page number of the results to fetch.
   */
  page?: number

}

export interface GetByUsernameEventsOrgsAndOrgQuery {
  /**
   * Results per page (max 100)
   */
  perpage?: number

  /**
   * Page number of the results to fetch.
   */
  page?: number

}

export interface GetByUsernameEventsPublicQuery {
  /**
   * Results per page (max 100)
   */
  perpage?: number

  /**
   * Page number of the results to fetch.
   */
  page?: number

}

export interface GetByUsernameFollowersQuery {
  /**
   * Results per page (max 100)
   */
  perpage?: number

  /**
   * Page number of the results to fetch.
   */
  page?: number

}

export interface GetByUsernameFollowingQuery {
  /**
   * Results per page (max 100)
   */
  perpage?: number

  /**
   * Page number of the results to fetch.
   */
  page?: number

}

export interface GetByUsernameGistsQuery {
  /**
   * Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.
   */
  since?: string

  /**
   * Results per page (max 100)
   */
  perpage?: number

  /**
   * Page number of the results to fetch.
   */
  page?: number

}

export interface GetByUsernameGpgKeysQuery {
  /**
   * Results per page (max 100)
   */
  perpage?: number

  /**
   * Page number of the results to fetch.
   */
  page?: number

}

export interface GetByUsernameHovercardQuery {
  /**
   * Identifies which additional information you'd like to receive about the person's hovercard. Can be `organization`, `repository`, `issue`, `pull_request`. **Required** when using `subject_id`.
   */
  subjecttype?: string

  /**
   * Uses the ID for the `subject_type` you specified. **Required** when using `subject_type`.
   */
  subjectid?: string

}

export interface UnnamedModel {
  message?: string

  octicon?: string

}

/**
 * Hovercard
 */
export interface Hovercard {
  contexts?: UnnamedModel[]

}

export interface GetByUsernameKeysQuery {
  /**
   * Results per page (max 100)
   */
  perpage?: number

  /**
   * Page number of the results to fetch.
   */
  page?: number

}

/**
 * Key Simple
 */
export interface Key_simple {
  id?: number

  key?: string

}

export interface GetByUsernameOrgsQuery {
  /**
   * Results per page (max 100)
   */
  perpage?: number

  /**
   * Page number of the results to fetch.
   */
  page?: number

}

export interface GetByUsernameProjectsQuery {
  /**
   * Indicates the state of the projects to return. Can be either `open`, `closed`, or `all`.
   */
  state?: string

  /**
   * Results per page (max 100)
   */
  perpage?: number

  /**
   * Page number of the results to fetch.
   */
  page?: number

}

export interface GetByUsernameReceivedEventsQuery {
  /**
   * Results per page (max 100)
   */
  perpage?: number

  /**
   * Page number of the results to fetch.
   */
  page?: number

}

export interface GetByUsernameReceivedEventsPublicQuery {
  /**
   * Results per page (max 100)
   */
  perpage?: number

  /**
   * Page number of the results to fetch.
   */
  page?: number

}

export interface GetByUsernameReposQuery {
  /**
   * Can be one of `all`, `owner`, `member`.
   */
  type?: string

  /**
   * Can be one of `created`, `updated`, `pushed`, `full_name`.
   */
  sort?: string

  /**
   * Can be one of `asc` or `desc`. Default: `asc` when using `full_name`, otherwise `desc`
   */
  direction?: string

  /**
   * Results per page (max 100)
   */
  perpage?: number

  /**
   * Page number of the results to fetch.
   */
  page?: number

}

export interface GetByUsernameStarredQuery {
  /**
   * One of `created` (when the repository was starred) or `updated` (when it was last pushed to).
   */
  sort?: string

  /**
   * One of `asc` (ascending) or `desc` (descending).
   */
  direction?: string

  /**
   * Results per page (max 100)
   */
  perpage?: number

  /**
   * Page number of the results to fetch.
   */
  page?: number

}

export interface GetByUsernameSubscriptionsQuery {
  /**
   * Results per page (max 100)
   */
  perpage?: number

  /**
   * Page number of the results to fetch.
   */
  page?: number

}
