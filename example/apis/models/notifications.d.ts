/* eslint-disable */

/**
 * This file was auto generated by `ts-autoapi`.
 * Do not make direct changes to the file.
 * If you need to make changes with openapi doc file,
 * please use the ts-autoapi cli.
 */

export interface GetQuery {
  /**
   * If `true`, show notifications marked as read.
   */
  all?: boolean

  /**
   * If `true`, only shows notifications in which the user is directly participating or mentioned.
   */
  participating?: boolean

  /**
   * Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.
   */
  since?: string

  /**
   * Only show notifications updated before the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.
   */
  before?: string

  /**
   * Results per page (max 100)
   */
  perpage?: number

  /**
   * Page number of the results to fetch.
   */
  page?: number

}

export interface UnnamedModel {
  admin?: boolean

  maintain?: boolean

  push?: boolean

  triage?: boolean

  pull?: boolean

}

/**
 * Minimal Repository
 */
export interface Minimal_repository {
  id?: number

  node_id?: string

  name?: string

  full_name?: string

  owner?: any

  private?: boolean

  html_url?: string

  description?: string | null

  fork?: boolean

  url?: string

  archive_url?: string

  assignees_url?: string

  blobs_url?: string

  branches_url?: string

  collaborators_url?: string

  comments_url?: string

  commits_url?: string

  compare_url?: string

  contents_url?: string

  contributors_url?: string

  deployments_url?: string

  downloads_url?: string

  events_url?: string

  forks_url?: string

  git_commits_url?: string

  git_refs_url?: string

  git_tags_url?: string

  git_url?: string

  issue_comment_url?: string

  issue_events_url?: string

  issues_url?: string

  keys_url?: string

  labels_url?: string

  languages_url?: string

  merges_url?: string

  milestones_url?: string

  notifications_url?: string

  pulls_url?: string

  releases_url?: string

  ssh_url?: string

  stargazers_url?: string

  statuses_url?: string

  subscribers_url?: string

  subscription_url?: string

  tags_url?: string

  teams_url?: string

  trees_url?: string

  clone_url?: string

  mirror_url?: string | null

  hooks_url?: string

  svn_url?: string

  homepage?: string | null

  language?: string | null

  forks_count?: number

  stargazers_count?: number

  watchers_count?: number

  size?: number

  default_branch?: string

  open_issues_count?: number

  is_template?: boolean

  topics?: string[]

  has_issues?: boolean

  has_projects?: boolean

  has_wiki?: boolean

  has_pages?: boolean

  has_downloads?: boolean

  archived?: boolean

  disabled?: boolean

  visibility?: string

  pushed_at?: string | null

  created_at?: string | null

  updated_at?: string | null

  permissions?: UnnamedModel

  template_repository?: any

  temp_clone_token?: string

  delete_branch_on_merge?: boolean

  subscribers_count?: number

  network_count?: number

  code_of_conduct?: any

  license?: any | null

  forks?: number

  open_issues?: number

  watchers?: number

  allow_forking?: boolean

}

export interface UnnamedModel$1 {
  title?: string

  url?: string

  latest_comment_url?: string

  type?: string

}

/**
 * Thread
 */
export interface Thread {
  id?: string

  /**
   * Minimal Repository
   */
  repository?: Minimal_repository

  subject?: UnnamedModel$1

  reason?: string

  unread?: boolean

  updated_at?: string

  last_read_at?: string | null

  url?: string

  subscription_url?: string

}

export interface UnnamedModel$2 {
  /**
   * Describes the last point that notifications were checked.
   */
  last_read_at?: string

  /**
   * Whether the notification has been read.
   */
  read?: boolean

}

/**
 * Thread Subscription
 */
export interface Thread_subscription {
  subscribed?: boolean

  ignored?: boolean

  reason?: string | null

  created_at?: string | null

  url?: string

  thread_url?: string

  repository_url?: string

}

export interface UnnamedModel$3 {
  /**
   * Whether to block all notifications from a thread.
   */
  ignored?: boolean

}
