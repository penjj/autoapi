/* eslint-disable */

/**
 * This file was auto generated by `ts-autoapi`.
 * Do not make direct changes to the file.
 * If you need to make changes with openapi doc file,
 * please use the ts-autoapi cli.
 */

export interface UnnamedModel {
  /**
   * The new name of the user.
   */
  name?: string

  /**
   * The publicly visible email address of the user.
   */
  email?: string

  /**
   * The new blog URL of the user.
   */
  blog?: string

  /**
   * The new Twitter username of the user.
   */
  twitter_username?: string | null

  /**
   * The new company of the user.
   */
  company?: string

  /**
   * The new location of the user.
   */
  location?: string

  /**
   * The new hiring availability of the user.
   */
  hireable?: boolean

  /**
   * The new short biography of the user.
   */
  bio?: string

}

export interface UnnamedModel$1 {
  collaborators?: number

  name?: string

  space?: number

  private_repos?: number

}

/**
 * Private User
 */
export interface Private_user {
  login?: string

  id?: number

  node_id?: string

  avatar_url?: string

  gravatar_id?: string | null

  url?: string

  html_url?: string

  followers_url?: string

  following_url?: string

  gists_url?: string

  starred_url?: string

  subscriptions_url?: string

  organizations_url?: string

  repos_url?: string

  events_url?: string

  received_events_url?: string

  type?: string

  site_admin?: boolean

  name?: string | null

  company?: string | null

  blog?: string | null

  location?: string | null

  email?: string | null

  hireable?: boolean | null

  bio?: string | null

  public_repos?: number

  public_gists?: number

  followers?: number

  following?: number

  created_at?: string

  updated_at?: string

  private_gists?: number

  total_private_repos?: number

  owned_private_repos?: number

  disk_usage?: number

  collaborators?: number

  two_factor_authentication?: boolean

  plan?: UnnamedModel$1

  suspended_at?: string

  business_plus?: boolean

  ldap_dn?: string

}

export interface GetEmailsQuery {
  /**
   * Results per page (max 100)
   */
  perpage?: number

  /**
   * Page number of the results to fetch.
   */
  page?: number

}

/**
 * Email
 */
export interface Email {
  email?: string

  primary?: boolean

  verified?: boolean

  visibility?: string | null

}

export interface GetFollowersQuery {
  /**
   * Results per page (max 100)
   */
  perpage?: number

  /**
   * Page number of the results to fetch.
   */
  page?: number

}

export interface GetFollowingQuery {
  /**
   * Results per page (max 100)
   */
  perpage?: number

  /**
   * Page number of the results to fetch.
   */
  page?: number

}

export interface GetGpgKeysQuery {
  /**
   * Results per page (max 100)
   */
  perpage?: number

  /**
   * Page number of the results to fetch.
   */
  page?: number

}

export interface UnnamedModel$2 {
  email?: string

  verified?: boolean

}

export interface UnnamedModel$3 {
  id?: number

  primary_key_id?: number

  key_id?: string

  public_key?: string

  emails?: any[]

  subkeys?: any[]

  can_sign?: boolean

  can_encrypt_comms?: boolean

  can_encrypt_storage?: boolean

  can_certify?: boolean

  created_at?: string

  expires_at?: string | null

  raw_key?: string | null

}

/**
 * A unique encryption key
 */
export interface Gpg_key {
  id?: number

  primary_key_id?: number | null

  key_id?: string

  public_key?: string

  emails?: UnnamedModel$2[]

  subkeys?: UnnamedModel$3[]

  can_sign?: boolean

  can_encrypt_comms?: boolean

  can_encrypt_storage?: boolean

  can_certify?: boolean

  created_at?: string

  expires_at?: string | null

  raw_key?: string | null

}

export interface UnnamedModel$4 {
  /**
   * A GPG key in ASCII-armored format.
   */
  armored_public_key?: string

}

export interface GetInstallationsQuery {
  /**
   * Results per page (max 100)
   */
  perpage?: number

  /**
   * Page number of the results to fetch.
   */
  page?: number

}

export interface UnnamedModel$5 {
  total_count?: number

  installations?: any[]

}

export interface GetInstallationsByInstallationIdRepositoriesQuery {
  /**
   * Results per page (max 100)
   */
  perpage?: number

  /**
   * Page number of the results to fetch.
   */
  page?: number

}

export interface UnnamedModel$6 {
  total_count?: number

  repository_selection?: string

  repositories?: any[]

}

export interface GetIssuesQuery {
  /**
   * Indicates which sorts of issues to return. Can be one of:
\* `assigned`: Issues assigned to you
\* `created`: Issues created by you
\* `mentioned`: Issues mentioning you
\* `subscribed`: Issues you're subscribed to updates for
\* `all` or `repos`: All issues the authenticated user can see, regardless of participation or creation
   */
  filter?: string

  /**
   * Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`.
   */
  state?: string

  /**
   * A list of comma separated label names. Example: `bug,ui,@high`
   */
  labels?: string

  /**
   * What to sort results by. Can be either `created`, `updated`, `comments`.
   */
  sort?: string

  /**
   * One of `asc` (ascending) or `desc` (descending).
   */
  direction?: string

  /**
   * Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.
   */
  since?: string

  /**
   * Results per page (max 100)
   */
  perpage?: number

  /**
   * Page number of the results to fetch.
   */
  page?: number

}

export interface GetKeysQuery {
  /**
   * Results per page (max 100)
   */
  perpage?: number

  /**
   * Page number of the results to fetch.
   */
  page?: number

}

/**
 * Key
 */
export interface Key {
  key?: string

  id?: number

  url?: string

  title?: string

  created_at?: string

  verified?: boolean

  read_only?: boolean

}

export interface UnnamedModel$7 {
  /**
   * A descriptive name for the new key.
   */
  title?: string

  /**
   * The public SSH key to add to your GitHub account.
   */
  key?: string

}

export interface GetMembershipsOrgsQuery {
  /**
   * Indicates the state of the memberships to return. Can be either `active` or `pending`. If not specified, the API returns both active and pending memberships.
   */
  state?: string

  /**
   * Results per page (max 100)
   */
  perpage?: number

  /**
   * Page number of the results to fetch.
   */
  page?: number

}

export interface UnnamedModel$8 {
  /**
   * The state that the membership should be in. Only `"active"` will be accepted.
   */
  state?: string

}

export interface GetOrgsQuery {
  /**
   * Results per page (max 100)
   */
  perpage?: number

  /**
   * Page number of the results to fetch.
   */
  page?: number

}

export interface UnnamedModel$9 {
  /**
   * Name of the project
   */
  name?: string

  /**
   * Body of the project
   */
  body?: string | null

}

export interface GetPublicEmailsQuery {
  /**
   * Results per page (max 100)
   */
  perpage?: number

  /**
   * Page number of the results to fetch.
   */
  page?: number

}

export interface GetReposQuery {
  /**
   * Can be one of `all`, `public`, or `private`. Note: For GitHub AE, can be one of `all`, `internal`, or `private`.
   */
  visibility?: string

  /**
   * Comma-separated list of values. Can include:
\* `owner`: Repositories that are owned by the authenticated user.
\* `collaborator`: Repositories that the user has been added to as a collaborator.
\* `organization_member`: Repositories that the user has access to through being a member of an organization. This includes every repository on every team that the user is on.
   */
  affiliation?: string

  /**
   * Can be one of `all`, `owner`, `public`, `private`, `member`. Note: For GitHub AE, can be one of `all`, `owner`, `internal`, `private`, `member`. Default: `all`

Will cause a `422` error if used in the same request as **visibility** or **affiliation**. Will cause a `422` error if used in the same request as **visibility** or **affiliation**.
   */
  type?: string

  /**
   * Can be one of `created`, `updated`, `pushed`, `full_name`.
   */
  sort?: string

  /**
   * Can be one of `asc` or `desc`. Default: `asc` when using `full_name`, otherwise `desc`
   */
  direction?: string

  /**
   * Results per page (max 100)
   */
  perpage?: number

  /**
   * Page number of the results to fetch.
   */
  page?: number

  /**
   * Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.
   */
  since?: string

  /**
   * Only show notifications updated before the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.
   */
  before?: string

}

export interface UnnamedModel$10 {
  /**
   * The name of the repository.
   */
  name?: string

  /**
   * A short description of the repository.
   */
  description?: string

  /**
   * A URL with more information about the repository.
   */
  homepage?: string

  /**
   * Whether the repository is private.
   */
  private?: boolean

  /**
   * Whether issues are enabled.
   */
  has_issues?: boolean

  /**
   * Whether projects are enabled.
   */
  has_projects?: boolean

  /**
   * Whether the wiki is enabled.
   */
  has_wiki?: boolean

  /**
   * The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization.
   */
  team_id?: number

  /**
   * Whether the repository is initialized with a minimal README.
   */
  auto_init?: boolean

  /**
   * The desired language or platform to apply to the .gitignore.
   */
  gitignore_template?: string

  /**
   * The license keyword of the open source license for this repository.
   */
  license_template?: string

  /**
   * Whether to allow squash merges for pull requests.
   */
  allow_squash_merge?: boolean

  /**
   * Whether to allow merge commits for pull requests.
   */
  allow_merge_commit?: boolean

  /**
   * Whether to allow rebase merges for pull requests.
   */
  allow_rebase_merge?: boolean

  /**
   * Whether to delete head branches when pull requests are merged
   */
  delete_branch_on_merge?: boolean

  /**
   * Whether downloads are enabled.
   */
  has_downloads?: boolean

  /**
   * Whether this repository acts as a template that can be used to generate new repositories.
   */
  is_template?: boolean

}

export interface GetRepositoryInvitationsQuery {
  /**
   * Results per page (max 100)
   */
  perpage?: number

  /**
   * Page number of the results to fetch.
   */
  page?: number

}

export interface GetStarredQuery {
  /**
   * One of `created` (when the repository was starred) or `updated` (when it was last pushed to).
   */
  sort?: string

  /**
   * One of `asc` (ascending) or `desc` (descending).
   */
  direction?: string

  /**
   * Results per page (max 100)
   */
  perpage?: number

  /**
   * Page number of the results to fetch.
   */
  page?: number

}

export interface GetSubscriptionsQuery {
  /**
   * Results per page (max 100)
   */
  perpage?: number

  /**
   * Page number of the results to fetch.
   */
  page?: number

}

export interface GetTeamsQuery {
  /**
   * Results per page (max 100)
   */
  perpage?: number

  /**
   * Page number of the results to fetch.
   */
  page?: number

}
