/* eslint-disable */

/**
 * This file was auto generated by `autoapi`.
 * Do not make direct changes to the file.
 * If you need to make changes with openapi doc file,
 * please use the autoapi cli.
 */

/**
 * Project cards represent a scope of work.
 */
export interface Project_card {
  url?: string

  /**
   * The project card's ID
   */
  id?: number

  node_id?: string

  note?: string | null

  creator?: any

  created_at?: string

  updated_at?: string

  /**
   * Whether or not the card is archived
   */
  archived?: boolean

  column_name?: string

  project_id?: string

  column_url?: string

  content_url?: string

  project_url?: string

}

export interface UnnamedModel {
  /**
   * The project card's note
   */
  note?: string | null

  /**
   * Whether or not the card is archived
   */
  archived?: boolean

}

export interface UnnamedModel$1 {
  /**
   * The position of the card in a column. Can be one of: `top`, `bottom`, or `after:<card_id>` to place after the specified card.
   */
  position?: string

  /**
   * The unique identifier of the column the card should be moved to
   */
  column_id?: number

}

/**
 * Project columns contain cards of work.
 */
export interface Project_column {
  url?: string

  project_url?: string

  cards_url?: string

  /**
   * The unique identifier of the project column
   */
  id?: number

  node_id?: string

  /**
   * Name of the project column
   */
  name?: string

  created_at?: string

  updated_at?: string

}

export interface UnnamedModel$2 {
  /**
   * Name of the project column
   */
  name?: string

}

export interface GetColumnsByColumnIdCardsQuery {
  /**
   * Filters the project cards that are returned by the card's state. Can be one of `all`,`archived`, or `not_archived`.
   */
  archivedstate?: string

  /**
   * Results per page (max 100)
   */
  perpage?: number

  /**
   * Page number of the results to fetch.
   */
  page?: number

}

export interface UnnamedModel$3 {
  /**
   * The position of the column in a project. Can be one of: `first`, `last`, or `after:<column_id>` to place after the specified column.
   */
  position?: string

}

export interface UnnamedModel$4 {
  /**
   * Name of the project
   */
  name?: string

  /**
   * Body of the project
   */
  body?: string | null

  /**
   * State of the project; either 'open' or 'closed'
   */
  state?: string

  /**
   * The baseline permission that all organization members have on this project
   */
  organization_permission?: string

  /**
   * Whether or not this project can be seen by everyone.
   */
  private?: boolean

}

export interface GetByProjectIdCollaboratorsQuery {
  /**
   * Filters the collaborators by their affiliation. Can be one of:  
\* `outside`: Outside collaborators of a project that are not a member of the project's organization.  
\* `direct`: Collaborators with permissions to a project, regardless of organization membership status.  
\* `all`: All collaborators the authenticated user can see.
   */
  affiliation?: string

  /**
   * Results per page (max 100)
   */
  perpage?: number

  /**
   * Page number of the results to fetch.
   */
  page?: number

}

/**
 * Project Collaborator Permission
 */
export interface Project_collaborator_permission {
  permission?: string

  user?: any

}

export interface GetByProjectIdColumnsQuery {
  /**
   * Results per page (max 100)
   */
  perpage?: number

  /**
   * Page number of the results to fetch.
   */
  page?: number

}

export interface UnnamedModel$5 {
  /**
   * Name of the project column
   */
  name?: string

}
