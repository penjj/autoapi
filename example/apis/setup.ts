/* eslint-disable */

/**
 * This file was auto generated by `autoapi`.
 * Do not make direct changes to the file.
 * If you need to make changes with openapi doc file,
 * please use the autoapi cli.
 */
import { api, type Config, type Api } from 'autoapi'
import {
  Configuration_status,
  Maintenance_status,
  Enterprise_settings,
  Ssh_key
} from './models/setup.d'

/**
 * Get the configuration status
This endpoint allows you to check the status of the most recent configuration process:

Note that you may need to wait several seconds after you start a process before you can check its status.

The different statuses are:

| Status        | Description                       |
| ------------- | --------------------------------- |
| `PENDING`     | The job has not started yet       |
| `CONFIGURING` | The job is running                |
| `DONE`        | The job has finished correctly    |
| `FAILED`      | The job has finished unexpectedly |
 */
export const getApiConfigcheck = api<(config?: Config<any, any>) => Configuration_status>`GET /setup/api/configcheck`

export type GetApiConfigcheck = Api<typeof getApiConfigcheck>

/**
 * Start a configuration process
This endpoint allows you to start a configuration process at any time for your updated settings to take effect:
 */
export const postApiConfigure = api<(config?: Config<any, any>) => any>`POST /setup/api/configure`

export type PostApiConfigure = Api<typeof postApiConfigure>

/**
 * Get the maintenance status
Check your installation's maintenance status:
 */
export const getApiMaintenance = api<(config?: Config<any, any>) => Maintenance_status>`GET /setup/api/maintenance`

export type GetApiMaintenance = Api<typeof getApiMaintenance>

/**
 * Enable or disable maintenance mode
**Note:** The request body for this operation must be submitted as `application/x-www-form-urlencoded` data. You can submit a parameter value as a string, or you can use a tool such as `curl` to submit a parameter value as the contents of a text file. For more information, see the [`curl` documentation](https://curl.se/docs/manpage.html#--data-urlencode).
 */
export const postApiMaintenance = api<(config?: Config<any, any>) => any>`POST /setup/api/maintenance`

export type PostApiMaintenance = Api<typeof postApiMaintenance>

/**
 * Get settings
 */
export const getApiSettings = api<(config?: Config<any, any>) => Enterprise_settings>`GET /setup/api/settings`

export type GetApiSettings = Api<typeof getApiSettings>

/**
 * Set settings
For a list of the available settings, see the [Get settings endpoint](https://docs.github.com/enterprise-server@3.0/rest/reference/enterprise-admin#get-settings).

**Note:** The request body for this operation must be submitted as `application/x-www-form-urlencoded` data. You can submit a parameter value as a string, or you can use a tool such as `curl` to submit a parameter value as the contents of a text file. For more information, see the [`curl` documentation](https://curl.se/docs/manpage.html#--data-urlencode).
 */
export const putApiSettings = api<(config?: Config<any, any>) => any>`PUT /setup/api/settings`

export type PutApiSettings = Api<typeof putApiSettings>

/**
 * Get all authorized SSH keys
 */
export const getApiSettingsAuthorizedKeys = api<(config?: Config<any, any>) => Ssh_key[]>`GET /setup/api/settings/authorized-keys`

export type GetApiSettingsAuthorizedKeys = Api<typeof getApiSettingsAuthorizedKeys>

/**
 * Add an authorized SSH key
**Note:** The request body for this operation must be submitted as `application/x-www-form-urlencoded` data. You can submit a parameter value as a string, or you can use a tool such as `curl` to submit a parameter value as the contents of a text file. For more information, see the [`curl` documentation](https://curl.se/docs/manpage.html#--data-urlencode).
 */
export const postApiSettingsAuthorizedKeys = api<(config?: Config<any, any>) => any>`POST /setup/api/settings/authorized-keys`

export type PostApiSettingsAuthorizedKeys = Api<typeof postApiSettingsAuthorizedKeys>

/**
 * Remove an authorized SSH key
**Note:** The request body for this operation must be submitted as `application/x-www-form-urlencoded` data. You can submit a parameter value as a string, or you can use a tool such as `curl` to submit a parameter value as the contents of a text file. For more information, see the [`curl` documentation](https://curl.se/docs/manpage.html#--data-urlencode).
 */
export const deleteApiSettingsAuthorizedKeys = api<(config?: Config<any, any>) => any[]>`DELETE /setup/api/settings/authorized-keys`

export type DeleteApiSettingsAuthorizedKeys = Api<typeof deleteApiSettingsAuthorizedKeys>

/**
 * Create a GitHub license
When you boot a GitHub instance for the first time, you can use the following endpoint to upload a license.

Note that you need to `POST` to [`/setup/api/configure`](https://docs.github.com/enterprise-server@3.0/rest/reference/enterprise-admin#start-a-configuration-process) to start the actual configuration process.

When using this endpoint, your GitHub instance must have a password set. This can be accomplished two ways:

1.  If you're working directly with the API before accessing the web interface, you must pass in the password parameter to set your password.
2.  If you set up your instance via the web interface before accessing the API, your calls to this endpoint do not need the password parameter.

**Note:** The request body for this operation must be submitted as `application/x-www-form-urlencoded` data. You can submit a parameter value as a string, or you can use a tool such as `curl` to submit a parameter value as the contents of a text file. For more information, see the [`curl` documentation](https://curl.se/docs/manpage.html#--data-urlencode).
 */
export const postApiStart = api<(config?: Config<any, any>) => any>`POST /setup/api/start`

export type PostApiStart = Api<typeof postApiStart>

/**
 * Upgrade a license
This API upgrades your license and also triggers the configuration process.

**Note:** The request body for this operation must be submitted as `application/x-www-form-urlencoded` data. You can submit a parameter value as a string, or you can use a tool such as `curl` to submit a parameter value as the contents of a text file. For more information, see the [`curl` documentation](https://curl.se/docs/manpage.html#--data-urlencode).
 */
export const postApiUpgrade = api<(config?: Config<any, any>) => any>`POST /setup/api/upgrade`

export type PostApiUpgrade = Api<typeof postApiUpgrade>
