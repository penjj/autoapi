/* eslint-disable */

/**
 * This file was auto generated by `ts-autoapi`.
 * Do not make direct changes to the file.
 * If you need to make changes with openapi doc file,
 * please use the ts-autoapi cli.
 */
import { api, type Config, type Api } from 'ts-autoapi'
import {
  Announcement,
  License_info,
  Enterprise_overview
} from './models/enterprise.d'

/**
 * Get the global announcement banner
Gets the current message and expiration date of the global announcement banner in your enterprise.
 */
export const getAnnouncement = api<(config?: Config<any, any>) => Announcement>`GET /enterprise/announcement`

export type GetAnnouncement = Api<typeof getAnnouncement>

/**
 * Set the global announcement banner
Sets the message and expiration time for the global announcement banner in your enterprise.
 */
export const patchAnnouncement = api<(body?: any, config?: Config<any, any>) => any>`PATCH /enterprise/announcement`

export type PatchAnnouncement = Api<typeof patchAnnouncement>

/**
 * Remove the global announcement banner
Removes the global announcement banner in your enterprise.
 */
export const deleteAnnouncement = api<(config?: Config<any, any>) => any>`DELETE /enterprise/announcement`

export type DeleteAnnouncement = Api<typeof deleteAnnouncement>

/**
 * Get license information
 */
export const getSettingsLicense = api<(config?: Config<any, any>) => License_info>`GET /enterprise/settings/license`

export type GetSettingsLicense = Api<typeof getSettingsLicense>

/**
 * Get all statistics
 */
export const getStatsAll = api<(config?: Config<any, any>) => Enterprise_overview>`GET /enterprise/stats/all`

export type GetStatsAll = Api<typeof getStatsAll>

/**
 * Get comment statistics
 */
export const getStatsComments = api<(config?: Config<any, any>) => any>`GET /enterprise/stats/comments`

export type GetStatsComments = Api<typeof getStatsComments>

/**
 * Get gist statistics
 */
export const getStatsGists = api<(config?: Config<any, any>) => any>`GET /enterprise/stats/gists`

export type GetStatsGists = Api<typeof getStatsGists>

/**
 * Get hooks statistics
 */
export const getStatsHooks = api<(config?: Config<any, any>) => any>`GET /enterprise/stats/hooks`

export type GetStatsHooks = Api<typeof getStatsHooks>

/**
 * Get issue statistics
 */
export const getStatsIssues = api<(config?: Config<any, any>) => any>`GET /enterprise/stats/issues`

export type GetStatsIssues = Api<typeof getStatsIssues>

/**
 * Get milestone statistics
 */
export const getStatsMilestones = api<(config?: Config<any, any>) => any>`GET /enterprise/stats/milestones`

export type GetStatsMilestones = Api<typeof getStatsMilestones>

/**
 * Get organization statistics
 */
export const getStatsOrgs = api<(config?: Config<any, any>) => any>`GET /enterprise/stats/orgs`

export type GetStatsOrgs = Api<typeof getStatsOrgs>

/**
 * Get pages statistics
 */
export const getStatsPages = api<(config?: Config<any, any>) => any>`GET /enterprise/stats/pages`

export type GetStatsPages = Api<typeof getStatsPages>

/**
 * Get pull request statistics
 */
export const getStatsPulls = api<(config?: Config<any, any>) => any>`GET /enterprise/stats/pulls`

export type GetStatsPulls = Api<typeof getStatsPulls>

/**
 * Get repository statistics
 */
export const getStatsRepos = api<(config?: Config<any, any>) => any>`GET /enterprise/stats/repos`

export type GetStatsRepos = Api<typeof getStatsRepos>

/**
 * Get users statistics
 */
export const getStatsUsers = api<(config?: Config<any, any>) => any>`GET /enterprise/stats/users`

export type GetStatsUsers = Api<typeof getStatsUsers>
